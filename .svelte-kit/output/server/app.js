import { respond } from "@sveltejs/kit/ssr";
import { toBase64, fromBase64 } from "js-base64";
import "moment";
import { persist, localStorage } from "@macfja/svelte-persistent-store";
import "random-word-slugs";
function noop() {
}
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
  let value;
  subscribe(store, (_) => value = _)();
  return value;
}
function null_to_empty(value) {
  return value == null ? "" : value;
}
function set_store_value(store, ret, value = ret) {
  store.set(value);
  return ret;
}
function custom_event(type, detail) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type, false, false, detail);
  return e;
}
let current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function afterUpdate(fn) {
  get_current_component().$$.after_update.push(fn);
}
function createEventDispatcher() {
  const component = get_current_component();
  return (type, detail) => {
    const callbacks = component.$$.callbacks[type];
    if (callbacks) {
      const event = custom_event(type, detail);
      callbacks.slice().forEach((fn) => {
        fn.call(component, event);
      });
    }
  };
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
Promise.resolve();
const escaped = {
  '"': "&quot;",
  "'": "&#39;",
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;"
};
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function each(items, fn) {
  let str = "";
  for (let i = 0; i < items.length; i += 1) {
    str += fn(items[i], i);
  }
  return str;
}
const missing_component = {
  $$render: () => ""
};
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
let on_destroy;
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(parent_component ? parent_component.$$.context : context || []),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css2) => css2.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}";
const css$3 = {
  code: "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>#svelte-announcer{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}</style>"],"names":[],"mappings":"AAqDO,gCAAiB,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,MAAM,CAAC,MAAM,GAAG,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$3);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1pdgbjn"}">${navigated ? `${escape(title)}` : ``}</div>` : ``}`;
});
let base = "";
let assets = "/.";
function set_paths(paths) {
  ({ base, assets } = paths);
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({ head, body }) => `<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>Online FlowChart &amp; Diagrams Editor - DeveloperCodeBase Live Editor</title>
		<meta
			name="og:image"
			content=""
		/>
		<link rel="canonical" href="" />
		<meta
			name="description"
			content="DeveloperCodeBase."
		/>
		<link rel="icon" type="image/png" href="favicon.png" />
		<link rel="manifest" href="manifest.json" />
		<link
			rel="stylesheet"
			href="all.min.css"
		/>
		<script
			src="mermaid.min.js"
			integrity="sha256-sVAx+v/Q7v0Q2xm5vN7h5ccSna6gaLREhG9sF8pKT6I="
			crossorigin="anonymous"
		><\/script>
		<link
			rel="stylesheet"
			href="editor.main.min.css"
			crossorigin="anonymous"
			referrerpolicy="no-referrer"
		/>
		<script>
			var require = {
				paths: { vs: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.25.2/min/vs' }
			};
		<\/script>
		<script
			src="loader.min.js"
			crossorigin="anonymous"
			referrerpolicy="no-referrer"
		><\/script>
		<script
			src="editor.main.nls.min.js"
			crossorigin="anonymous"
			referrerpolicy="no-referrer"
		><\/script>
		<script
			src="editor.main.js"
			crossorigin="anonymous"
			referrerpolicy="no-referrer"
		><\/script>

		` + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
const default_settings = { paths: { "base": "", "assets": "/." } };
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-3e272963.js",
      css: ["/./_app/assets/start-0826e215.css"],
      js: ["/./_app/start-3e272963.js", "/./_app/chunks/vendor-5c691847.js", "/./_app/chunks/preload-helper-13c00eaa.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/paths-45dac81d.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      if (error2.frame) {
        console.error(error2.frame);
      }
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: false,
    target: "#svelte",
    template,
    trailing_slash: "ignore"
  };
}
const empty = () => ({});
const manifest = {
  assets: [{ "file": ".nojekyll", "size": 0, "type": null }, { "file": "all.min.css", "size": 59344, "type": "text/css" }, { "file": "analytics.js", "size": 49351, "type": "application/javascript" }, { "file": "collect", "size": 2, "type": null }, { "file": "devlogo.ico", "size": 107142, "type": "image/vnd.microsoft.icon" }, { "file": "devlogo2.ico", "size": 111378, "type": "image/vnd.microsoft.icon" }, { "file": "editor.main.js", "size": 2608835, "type": "application/javascript" }, { "file": "editor.main.min.css", "size": 71541, "type": "text/css" }, { "file": "editor.main.nls.min.js", "size": 63501, "type": "application/javascript" }, { "file": "favicon.png", "size": 5406, "type": "image/png" }, { "file": "icon-192.png", "size": 5057, "type": "image/png" }, { "file": "icon-512.png", "size": 8619, "type": "image/png" }, { "file": "loader.min.js", "size": 30691, "type": "application/javascript" }, { "file": "mermaid.min.js", "size": 894947, "type": "application/javascript" }, { "file": "robots.txt", "size": 67, "type": "text/plain" }, { "file": "service-worker.js", "size": 107, "type": "application/javascript" }, { "file": "workerMain.js", "size": 180116, "type": "application/javascript" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/manifest\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return manifest_json;
      })
    },
    {
      type: "page",
      pattern: /^\/edit\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/edit.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/view\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/view.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve }) => resolve(request)),
  serverFetch: hooks.serverFetch || fetch
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/edit.svelte": () => Promise.resolve().then(function() {
    return edit;
  }),
  "src/routes/view.svelte": () => Promise.resolve().then(function() {
    return view;
  })
};
const metadata_lookup = { "src/routes/__layout.svelte": { "entry": "/./_app/pages/__layout.svelte-a339e463.js", "css": ["/./_app/assets/pages/__layout.svelte-8953f3bd.css"], "js": ["/./_app/pages/__layout.svelte-a339e463.js", "/./_app/chunks/vendor-5c691847.js", "/./_app/chunks/paths-45dac81d.js"], "styles": null }, ".svelte-kit/build/components/error.svelte": { "entry": "/./_app/error.svelte-f1502c0c.js", "css": [], "js": ["/./_app/error.svelte-f1502c0c.js", "/./_app/chunks/vendor-5c691847.js"], "styles": null }, "src/routes/index.svelte": { "entry": "/./_app/pages/index.svelte-90fcca56.js", "css": [], "js": ["/./_app/pages/index.svelte-90fcca56.js", "/./_app/chunks/vendor-5c691847.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/paths-45dac81d.js"], "styles": null }, "src/routes/edit.svelte": { "entry": "/./_app/pages/edit.svelte-31ac97be.js", "css": ["/./_app/assets/pages/edit.svelte-67b531cb.css", "/./_app/assets/util-2375eead.css"], "js": ["/./_app/pages/edit.svelte-31ac97be.js", "/./_app/chunks/vendor-5c691847.js", "/./_app/chunks/util-c7198978.js", "/./_app/chunks/preload-helper-13c00eaa.js", "/./_app/chunks/paths-45dac81d.js"], "styles": null }, "src/routes/view.svelte": { "entry": "/./_app/pages/view.svelte-3ade14a8.js", "css": ["/./_app/assets/util-2375eead.css"], "js": ["/./_app/pages/view.svelte-3ade14a8.js", "/./_app/chunks/vendor-5c691847.js", "/./_app/chunks/util-c7198978.js", "/./_app/chunks/preload-helper-13c00eaa.js"], "styles": null } };
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
const get = () => {
  return {
    body: {
      short_name: "Mermaid",
      name: "Mermaid Live Editor",
      icons: [
        {
          src: `${base}/icon-192.png`,
          type: "image/png",
          sizes: "192x192"
        },
        {
          src: `${base}/icon-512.png`,
          type: "image/png",
          sizes: "512x512"
        }
      ],
      start_url: `${base}/edit/`,
      background_color: "#112233",
      display: "standalone",
      scope: `${base}/edit/`,
      theme_color: "#112233",
      description: "FlowChart & Diagrams Editor.",
      orientation: "landscape"
    }
  };
};
var manifest_json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get
});
var app = "/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com*/\n\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],button{-webkit-appearance:button}legend{padding:0}progress{vertical-align:baseline}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}*,:after,:before{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.fixed{position:fixed}.absolute{position:absolute}.m-2{margin:.5rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.-mt-2{margin-top:-.5rem}.mr-2{margin-right:.5rem}.-mb-4{margin-bottom:-1rem}.block{display:block}.flex{display:flex}.table{display:table}.hidden{display:none}.h-6{height:1.5rem}.h-56{height:14rem}.h-full{height:100%}.h-screen{height:100vh}.w-24{width:6rem}.w-28{width:7rem}.w-auto{width:auto}.w-full{width:100%}.flex-1{flex:1 1 0%}.flex-auto{flex:1 1 auto}.flex-none{flex:none}.flex-grow{flex-grow:1}.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@-webkit-keyframes spin{to{transform:rotate(1turn)}}@keyframes spin{to{transform:rotate(1turn)}}@-webkit-keyframes ping{75%,to{opacity:0;transform:scale(2)}}@keyframes ping{75%,to{opacity:0;transform:scale(2)}}@-webkit-keyframes pulse{50%{opacity:.5}}@keyframes pulse{50%{opacity:.5}}@-webkit-keyframes bounce{0%,to{-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1);transform:translateY(-25%)}50%{-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1);transform:none}}@keyframes bounce{0%,to{-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1);transform:translateY(-25%)}50%{-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1);transform:none}}.cursor-default{cursor:default}.cursor-pointer{cursor:pointer}.resize{resize:both}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.content-center{align-content:center}.items-center{align-items:center}.justify-between{justify-content:space-between}.gap-2{gap:.5rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.5rem*var(--tw-space-y-reverse));margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)))}.overflow-auto{overflow:auto}.overflow-hidden{overflow:hidden}.rounded{border-radius:.25rem}.rounded-t{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.border{border-width:1px}.border-white{--tw-border-opacity:1;border-color:rgba(255,255,255,var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgba(156,163,175,var(--tw-border-opacity))}.border-indigo-500{--tw-border-opacity:1;border-color:rgba(99,102,241,var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-gray-800{--tw-bg-opacity:1;background-color:rgba(31,41,55,var(--tw-bg-opacity))}.bg-red-200{--tw-bg-opacity:1;background-color:rgba(254,202,202,var(--tw-bg-opacity))}.bg-green-200{--tw-bg-opacity:1;background-color:rgba(167,243,208,var(--tw-bg-opacity))}.bg-indigo-400{--tw-bg-opacity:1;background-color:rgba(129,140,248,var(--tw-bg-opacity))}.bg-indigo-800{--tw-bg-opacity:1;background-color:rgba(55,48,163,var(--tw-bg-opacity))}.hover\\:bg-red-300:hover{--tw-bg-opacity:1;background-color:rgba(252,165,165,var(--tw-bg-opacity))}.hover\\:bg-green-300:hover{--tw-bg-opacity:1;background-color:rgba(110,231,183,var(--tw-bg-opacity))}.hover\\:bg-indigo-900:hover{--tw-bg-opacity:1;background-color:rgba(49,46,129,var(--tw-bg-opacity))}.fill-current{fill:currentColor}.p-2{padding:.5rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.pt-4{padding-top:1rem}.text-center{text-align:center}.text-xs{font-size:.75rem;line-height:1rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-base{font-size:1rem;line-height:1.5rem}.font-thin{font-weight:100}.font-semibold{font-weight:600}.font-bold{font-weight:700}.leading-normal{line-height:1.5}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgba(156,163,175,var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgba(248,113,113,var(--tw-text-opacity))}.text-indigo-500{--tw-text-opacity:1;color:rgba(99,102,241,var(--tw-text-opacity))}*,:after,:before{--tw-shadow:0 0 #0000}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}*,:after,:before{--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}.filter{--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.nav-btn{border-bottom-width:2px;border-color:transparent;display:block}.nav-btn:hover{--tw-border-opacity:1;border-color:rgba(255,255,255,var(--tw-border-opacity))}.nav-btn{padding:.75rem 0}@media (min-width:1024px){.nav-btn{padding:.5rem}}.btn{background-color:rgba(99,102,241,var(--tw-bg-opacity));border-radius:.25rem}.btn,.btn:hover{--tw-bg-opacity:1}.btn:hover{background-color:rgba(67,56,202,var(--tw-bg-opacity))}.btn{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);padding-left:1rem;padding-right:1rem}.action-btn{--tw-bg-opacity:1;background-color:rgba(129,140,248,var(--tw-bg-opacity));border-radius:.25rem;flex:1 1 auto}.action-btn:hover{--tw-bg-opacity:1;background-color:rgba(99,102,241,var(--tw-bg-opacity))}.action-btn{--tw-text-opacity:1;--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgba(255,255,255,var(--tw-text-opacity));padding:.5rem}@media (min-width:768px){.md\\:flex{display:flex}.md\\:hidden{display:none}}@media (min-width:1024px){.lg\\:flex{display:flex}.lg\\:hidden{display:none}.lg\\:w-auto{width:auto}.lg\\:items-center{align-items:center}.lg\\:pt-0{padding-top:0}}";
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  onMount(() => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.register(`${base}/service-worker.js`, { scope: `${base}/` }).then(function(registration) {
      }).catch(function(error2) {
        console.log("Service worker registration failed, error:", error2);
      });
    }
  });
  return `<main class="${"h-screen"}">${slots.default ? slots.default({}) : ``}</main>`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
function load({ error: error2, status }) {
  return { props: { error: error2, status } };
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<pre>${escape(error2.message)}</pre>



${error2.frame ? `<pre>${escape(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load
});
function guard(name) {
  return () => {
    throw new Error(`Cannot call ${name}(...) on the server`);
  };
}
const goto = guard("goto");
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  onMount(() => __awaiter(void 0, void 0, void 0, function* () {
    const hash = window.location.hash.split("/");
    let newURL = "edit";
    if (hash.length > 2) {
      newURL = `${hash[1]}#${hash[2]}`;
    }
    yield goto(`${base}/${newURL}`, { replaceState: true });
  }));
  return ``;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes
});
const subscriber_queue = [];
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = [];
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (let i = 0; i < subscribers.length; i += 1) {
          const s = subscribers[i];
          s[1]();
          subscriber_queue.push(s, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.push(subscriber);
    if (subscribers.length === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      const index2 = subscribers.indexOf(subscriber);
      if (index2 !== -1) {
        subscribers.splice(index2, 1);
      }
      if (subscribers.length === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, (set) => {
    let inited = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result = fn(single ? values[0] : values, set);
      if (auto) {
        set(result);
      } else {
        cleanup = is_function(result) ? result : noop;
      }
    };
    const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {
      values[i] = value;
      pending &= ~(1 << i);
      if (inited) {
        sync();
      }
    }, () => {
      pending |= 1 << i;
    }));
    inited = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
    };
  });
}
let analytics;
const initAnalytics = async () => {
};
const defaultState = {
  code: `graph TD
    A[Nowrooz] -->|Get money| B(Go shopping)
    B --> C{Let me think}
    C -->|One| D[Laptop]
    C -->|Two| E[iPhone]
    C -->|Three| F[fa:fa-car Car]
  `,
  mermaid: JSON.stringify({
    theme: "default"
  }, null, 2),
  updateEditor: false,
  autoSync: true,
  updateDiagram: true
};
const codeStore = persist(writable(defaultState), localStorage(), "codeStore");
const base64State = derived([codeStore], ([code], set) => {
  set(toBase64(JSON.stringify(code), true));
});
const loadState = (data) => {
  let state;
  try {
    const stateStr = fromBase64(data);
    state = JSON.parse(stateStr);
    const mermaidConfig = typeof state.mermaid === "string" ? JSON.parse(state.mermaid) : state.mermaid;
    if (mermaidConfig.securityLevel && mermaidConfig.securityLevel !== "strict" && confirm(`Removing "securityLevel":"${mermaidConfig.securityLevel}" from the config for safety.
Click Cancel if you trust the source of this Diagram.`)) {
      delete mermaidConfig.securityLevel;
    }
    state.mermaid = JSON.stringify(mermaidConfig, null, 2);
  } catch (e) {
    if (data) {
      console.error("Init error", e);
    }
    state = get_store_value(codeStore);
  }
  updateCodeStore({ ...state, updateEditor: true });
};
const updateCodeStore = (newState) => {
  codeStore.update((state) => {
    return { ...state, ...newState };
  });
};
const initURLSubscription = () => {
  base64State.subscribe((state) => {
    history.replaceState(void 0, void 0, `#${state}`);
  });
};
const initEditor = (monacoEditor) => {
  monacoEditor.languages.register({ id: "mermaid" });
  monacoEditor.languages.setMonarchTokensProvider("mermaid", {
    typeKeywords: [
      "graph",
      "stateDiagram",
      "sequenceDiagram",
      "classDiagram",
      "pie",
      "erDiagram",
      "flowchart",
      "gantt",
      "gitGraph",
      "journey"
    ],
    keywords: ["participant", "as"],
    arrows: ["---", "===", "-->", "==>", "->>", "->"],
    tokenizer: {
      root: [
        [/[{}]/, "delimiter.bracket"],
        [/[a-z_$][\w$]*/, { cases: { "@typeKeywords": "keyword", "@keywords": "keyword" } }],
        [/[-=>ox]+/, { cases: { "@arrows": "transition" } }],
        [/[[{(}]+.+?[)\]}]+/, "string"],
        [/".*"/, "string"]
      ]
    },
    whitespace: [
      [/[ \t\r\n]+/, "white"],
      [/%%.*$/, "comment"]
    ]
  });
  monacoEditor.editor.defineTheme("myCoolTheme", {
    base: "vs",
    inherit: false,
    rules: [
      { token: "keyword", foreground: "880000", fontStyle: "bold" },
      { token: "custom-error", foreground: "ff0000", fontStyle: "bold" },
      { token: "string", foreground: "AA8500" },
      { token: "transition", foreground: "008800", fontStyle: "bold" },
      { token: "delimiter.bracket", foreground: "000000", fontStyle: "bold" }
    ]
  });
  monacoEditor.languages.registerCompletionItemProvider("mermaid", {
    provideCompletionItems: () => {
      const suggestions = [
        {
          label: "simpleText",
          kind: monacoEditor.languages.CompletionItemKind.Text,
          insertText: "simpleText"
        },
        {
          label: "testing",
          kind: monacoEditor.languages.CompletionItemKind.Keyword,
          insertText: "testing(${1:condition})",
          insertTextRules: monacoEditor.languages.CompletionItemInsertTextRule.InsertAsSnippet
        },
        {
          label: "ifelse",
          kind: monacoEditor.languages.CompletionItemKind.Snippet,
          insertText: ["if (${1:condition}) {", "	$0", "} else {", "	", "}"].join("\n"),
          insertTextRules: monacoEditor.languages.CompletionItemInsertTextRule.InsertAsSnippet,
          documentation: "If-Else Statement"
        }
      ];
      return { suggestions };
    }
  });
};
const Editor = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $codeStore, $$unsubscribe_codeStore;
  $$unsubscribe_codeStore = subscribe(codeStore, (value) => $codeStore = value);
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  let divEl = null;
  let editor;
  let Monaco;
  let { text } = $$props;
  let { language } = $$props;
  let { editorOptions = {
    value: text,
    language,
    scrollBeyondLastLine: false,
    minimap: { enabled: false },
    theme: "myCoolTheme",
    overviewRulerLanes: 0
  } } = $$props;
  let { errorMarkers = [] } = $$props;
  let oldText = text;
  const dispatch = createEventDispatcher();
  const loadMonaco = () => __awaiter(void 0, void 0, void 0, function* () {
    let i = 0;
    while (i++ < 10) {
      try {
        Monaco = monaco;
        return;
      } catch (_a) {
        yield new Promise((r) => setTimeout(r, 500));
      }
    }
    alert("Loading Monaco Editor failed. Please try refreshing the page.");
  });
  onMount(() => __awaiter(void 0, void 0, void 0, function* () {
    try {
      Monaco = monaco;
    } catch (_b) {
      yield loadMonaco();
    }
    initEditor(Monaco);
    editor = Monaco.editor.create(divEl, editorOptions);
    editor.onDidChangeModelContent(() => {
      text = editor.getValue();
      dispatch("update", { text });
    });
    const resizeObserver = new ResizeObserver((entries) => {
      editor.layout({
        height: entries[0].contentRect.height,
        width: entries[0].contentRect.width
      });
    });
    resizeObserver.observe(divEl.parentElement);
    return () => {
      editor.dispose();
    };
  }));
  if ($$props.text === void 0 && $$bindings.text && text !== void 0)
    $$bindings.text(text);
  if ($$props.language === void 0 && $$bindings.language && language !== void 0)
    $$bindings.language(language);
  if ($$props.editorOptions === void 0 && $$bindings.editorOptions && editorOptions !== void 0)
    $$bindings.editorOptions(editorOptions);
  if ($$props.errorMarkers === void 0 && $$bindings.errorMarkers && errorMarkers !== void 0)
    $$bindings.errorMarkers(errorMarkers);
  {
    Monaco === null || Monaco === void 0 ? void 0 : Monaco.editor.setModelLanguage(editor.getModel(), language);
  }
  {
    {
      if (text !== oldText) {
        if ($codeStore.updateEditor) {
          editor === null || editor === void 0 ? void 0 : editor.setValue(text);
        }
        oldText = text;
      }
      Monaco === null || Monaco === void 0 ? void 0 : Monaco.editor.setModelMarkers(editor.getModel(), "test", errorMarkers);
    }
  }
  $$unsubscribe_codeStore();
  return `<div id="${"editor"}" class="${"overflow-hidden"}"${add_attribute("this", divEl, 1)}></div>`;
});
const version = "8.11.0";
var navbar_svelte_svelte_type_style_lang = "#menu-toggle.svelte-qevfgi:checked+#menu.svelte-qevfgi{display:block}header.svelte-qevfgi.svelte-qevfgi{z-index:10000}";
analytics == null ? void 0 : analytics.track("version", { mermaidVersion: version });
var tabs_svelte_svelte_type_style_lang = ".icon.svelte-1qkpo3v{transition-duration:.5s}.isOpen.svelte-1qkpo3v{transform:rotate(90deg)}";
const css$2 = {
  code: ".icon.svelte-1qkpo3v{transition-duration:.5s}.isOpen.svelte-1qkpo3v{transform:rotate(90deg)}",
  map: `{"version":3,"file":"tabs.svelte","sources":["tabs.svelte"],"sourcesContent":["<script lang=\\"ts\\">var _a;\\r\\n;\\r\\nimport { createEventDispatcher } from 'svelte';\\r\\nimport { fade } from 'svelte/transition';\\r\\nexport let isCloseable = true;\\r\\nexport let tabs = [];\\r\\nexport let title;\\r\\nexport let isOpen = false;\\r\\nlet activeTabID = (_a = tabs[0]) === null || _a === void 0 ? void 0 : _a.id;\\r\\nconst dispatch = createEventDispatcher();\\r\\nconst toggleTabs = (tab) => {\\r\\n    activeTabID = tab.id;\\r\\n    dispatch('select', tab);\\r\\n};\\r\\n<\/script>\\n\\n<div class=\\"flex cursor-default\\">\\n\\t<span class=\\"text-white mr-2 font-semibold\\" on:click|stopPropagation={() => (isOpen = !isOpen)}>\\n\\t\\t{#if isCloseable}\\n\\t\\t\\t<i class=\\"fas fa-chevron-right icon\\" class:isOpen />\\n\\t\\t{/if}\\n\\t\\t{title}</span>\\n\\t{#if isOpen && tabs}\\n\\t\\t<ul class=\\"flex flex-wrap flex-row\\" transition:fade>\\n\\t\\t\\t{#each tabs as tab}\\n\\t\\t\\t\\t<li class=\\"mr-2 last:mr-0 w-28 h-6 flex-auto text-center\\">\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"text cursor-pointer font-semibold min-w-16 w-auto px-2 py-1 -mb-4 rounded-t  block leading-normal {activeTabID ===\\n\\t\\t\\t\\t\\t\\ttab.id\\n\\t\\t\\t\\t\\t\\t\\t? 'text-indigo-500 bg-white border-white'\\n\\t\\t\\t\\t\\t\\t\\t: 'text-white bg-indigo-800 border-indigo-500 hover:bg-indigo-900'}\\"\\n\\t\\t\\t\\t\\t\\ton:click|stopPropagation={() => toggleTabs(tab)}>\\n\\t\\t\\t\\t\\t\\t<i class={tab.icon} />\\n\\t\\t\\t\\t\\t\\t{tab.title}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t{/each}\\n\\t\\t</ul>\\n\\t{/if}\\n</div>\\n\\n<style>.icon{transition-duration:.5s}.isOpen{transform:rotate(90deg)}</style>\\n"],"names":[],"mappings":"AAyCO,oBAAK,CAAC,oBAAoB,GAAG,CAAC,sBAAO,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC"}`
};
const Tabs = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a;
  let { isCloseable = true } = $$props;
  let { tabs = [] } = $$props;
  let { title } = $$props;
  let { isOpen = false } = $$props;
  let activeTabID = (_a = tabs[0]) === null || _a === void 0 ? void 0 : _a.id;
  createEventDispatcher();
  if ($$props.isCloseable === void 0 && $$bindings.isCloseable && isCloseable !== void 0)
    $$bindings.isCloseable(isCloseable);
  if ($$props.tabs === void 0 && $$bindings.tabs && tabs !== void 0)
    $$bindings.tabs(tabs);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.isOpen === void 0 && $$bindings.isOpen && isOpen !== void 0)
    $$bindings.isOpen(isOpen);
  $$result.css.add(css$2);
  return `<div class="${"flex cursor-default"}"><span class="${"text-white mr-2 font-semibold"}">${isCloseable ? `<i class="${["fas fa-chevron-right icon svelte-1qkpo3v", isOpen ? "isOpen" : ""].join(" ").trim()}"></i>` : ``}
		${escape(title)}</span>
	${isOpen && tabs ? `<ul class="${"flex flex-wrap flex-row"}">${each(tabs, (tab) => `<li class="${"mr-2 last:mr-0 w-28 h-6 flex-auto text-center"}"><div class="${"text cursor-pointer font-semibold min-w-16 w-auto px-2 py-1 -mb-4 rounded-t  block leading-normal " + escape(activeTabID === tab.id ? "text-indigo-500 bg-white border-white" : "text-white bg-indigo-800 border-indigo-500 hover:bg-indigo-900")}"><i class="${escape(null_to_empty(tab.icon)) + " svelte-1qkpo3v"}"></i>
						${escape(tab.title)}</div>
				</li>`)}</ul>` : ``}
</div>`;
});
const Card = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { isCloseable = true } = $$props;
  let { isOpen = true } = $$props;
  let { tabs = [] } = $$props;
  let { title } = $$props;
  if ($$props.isCloseable === void 0 && $$bindings.isCloseable && isCloseable !== void 0)
    $$bindings.isCloseable(isCloseable);
  if ($$props.isOpen === void 0 && $$bindings.isOpen && isOpen !== void 0)
    $$bindings.isOpen(isOpen);
  if ($$props.tabs === void 0 && $$bindings.tabs && tabs !== void 0)
    $$bindings.tabs(tabs);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    isOpen = isCloseable ? isOpen : true;
    $$rendered = `<div class="${"bg-white rounded overflow-hidden shadow m-2 flex-grow flex flex-col"}"><div class="${"bg-gray-800  border-gray-400 p-2 flex-none"}"><div class="${"flex justify-between"}">${validate_component(Tabs, "Tabs").$$render($$result, { tabs, title, isCloseable, isOpen }, {
      isOpen: ($$value) => {
        isOpen = $$value;
        $$settled = false;
      }
    }, {})}
			<div class="${"flex gap-x-4 items-center text-white"}">${slots.actions ? slots.actions({}) : ``}</div></div></div>
	${isOpen ? `<div class="${"flex-grow overflow-auto"}">${slots.default ? slots.default({}) : ``}</div>` : ``}</div>`;
  } while (!$$settled);
  return $$rendered;
});
const Preset = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const samples = {
    "Flow Chart": `graph TD
    A[Nowrooz] -->|Get money| B(Go shopping)
    B --> C{Let me think}
    C -->|One| D[Laptop]
    C -->|Two| E[iPhone]
    C -->|Three| F[fa:fa-car Car]`,
    "Sequence Diagram": `sequenceDiagram
    Ali->>+Masoud: Hello Masoud, how are you?
    Ali->>+Masoud: Masoud, can you hear me?
    Masoud-->>-Ali: Hi Ali, I can hear you!
    Masoud-->>-Ali: I feel great!
            `,
    "Class Diagram": `classDiagram
    Animal <|-- Chicken
    Animal <|-- Fish
    Animal <|-- Lion
    Animal : +int age
    Animal : +String gender
    Animal: +isMammal()
    Animal: +mate()
    class Chicken{
      +String beakColor
      +swim()
      +quack()
    }
    class Fish{
      -int sizeInFeet
      -canEat()
    }
    class Lion{
      +bool is_wild
      +run()
    }
            `,
    "State Diagram": `stateDiagram-v2
    [*] --> Still
    Still --> [*]
    Still --> Moving
    Moving --> Still
    Moving --> Crash
    Crash --> [*]
            `,
    "Gantt Chart": `gantt
    title A Gantt Diagram
    dateFormat  YYYY-MM-DD
    section Section
    A task           :a1, 2014-01-01, 30d
    Another task     :after a1  , 20d
    section Another
    Task in sec      :2014-01-12  , 12d
    another task      : 24d
            `,
    "Pie Chart": `pie title Pets adopted by volunteers
    "Dogs" : 386
    "Cats" : 85
    "Rats" : 15
            `,
    "ER Diagram": `erDiagram
          CUSTOMER }|..|{ DELIVERY-ADDRESS : has
          CUSTOMER ||--o{ ORDER : places
          CUSTOMER ||--o{ INVOICE : "liable for"
          DELIVERY-ADDRESS ||--o{ ORDER : receives
          INVOICE ||--|{ ORDER : covers
          ORDER ||--|{ ORDER-ITEM : includes
          PRODUCT-CATEGORY ||--|{ PRODUCT : contains
          PRODUCT ||--o{ ORDER-ITEM : "ordered in"
            `,
    "Git Graph": `gitGraph:
options
{
    "nodeSpacing": 150,
    "nodeRadius": 10
}
end
commit
branch newbranch
checkout newbranch
commit
commit
checkout master
commit
commit
merge newbranch

            `,
    "User Journey": `  journey
    title My working day
    section Go to work
      Make tea: 5: Me
      Go upstairs: 3: Me
      Do work: 1: Me, Cat
    section Go home
      Go downstairs: 5: Me
      Sit down: 3: Me
      `
  };
  return `${validate_component(Card, "Card").$$render($$result, {
    title: "Choose your diagram",
    isOpen: false
  }, {}, {
    default: () => `<div class="${"flex gap-2 flex-wrap p-2"}">${each(Object.keys(samples), (sample) => `<button class="${"action-btn"}">${escape(sample)}</button>`)}</div>`
  })}`;
});
const Actions = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const isClipboardAvailable = () => {
    return Object.prototype.hasOwnProperty.call(window, "ClipboardItem");
  };
  let iUrl;
  let svgUrl;
  codeStore.subscribe((state) => {
    const stateCopy = JSON.parse(JSON.stringify(state));
    if (typeof stateCopy.mermaid === "string") {
      stateCopy.mermaid = JSON.parse(stateCopy.mermaid);
    }
    const b64Code = toBase64(JSON.stringify(stateCopy), true);
    iUrl = `https://mermaid.ink/img/${b64Code}`;
    svgUrl = `https://mermaid.ink/svg/${b64Code}`;
  });
  return `${validate_component(Card, "Card").$$render($$result, { title: "Save Diagram", isOpen: false }, {}, {
    default: () => `<div class="${"flex flex-wrap gap-2 m-2 "}">${isClipboardAvailable() ? `<button class="${" action-btn  w-full"}"><i class="${"far fa-copy"}"></i> Copy Image to clipboard
      </button>` : ``}
    <button class="${"action-btn flex-auto"}"><i class="${"fas fa-download"}"></i> PNG
    </button>
    <button class="${"action-btn flex-auto"}"><i class="${"fas fa-download"}"></i> SVG
    </button>
    <button class="${"action-btn flex-auto"}"><a target="${"_blank"}"${add_attribute("href", iUrl, 0)}><i class="${"fas fa-external-link-alt"}"></i> PNG</a></button>
    <button class="${"action-btn flex-auto"}"><a target="${"_blank"}"${add_attribute("href", svgUrl, 0)}><i class="${"fas fa-external-link-alt"}"></i> SVG</a></button>

    <div class="${"flex gap-2 items-center"}">PNG size
      <input type="${"radio"}" value="${"auto"}" id="${"autosize"}">
      <label for="${"autosize"}">Auto</label>
      <input type="${"radio"}" value="${"width"}" id="${"width-active"}">
      <label for="${"width"}">Width</label>
      <input type="${"radio"}" value="${"height"}" id="${"height-active"}">
      <label for="${"height"}">Height</label>
      ${``}</div>

    <div class="${"w-full flex gap-2 items-center"}"></div></div>`
  })}`;
});
const errorStore = writable(void 0);
var view_svelte_svelte_type_style_lang = "#view.svelte-5ndy2s{border:1px darkred;flex:1}.error.svelte-5ndy2s,.outOfSync.svelte-5ndy2s{opacity:.5}";
const css$1 = {
  code: "#view.svelte-5ndy2s{border:1px darkred;flex:1}.error.svelte-5ndy2s,.outOfSync.svelte-5ndy2s{opacity:.5}",
  map: `{"version":3,"file":"view.svelte","sources":["view.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { errorStore } from '$lib/util/error';\\r\\nimport { codeStore } from '$lib/util/state';\\r\\nimport { onMount } from 'svelte';\\r\\n;\\r\\nconst mermaid = window.mermaid;\\r\\nlet code = '';\\r\\nlet config = '';\\r\\nlet container;\\r\\nlet error = false;\\r\\nlet outOfSync = false;\\r\\nlet manualUpdate = true;\\r\\nonMount(() => {\\r\\n    codeStore.subscribe((state) => {\\r\\n        try {\\r\\n            if (container && state && (state.updateDiagram || state.autoSync)) {\\r\\n                if (!state.autoSync) {\\r\\n                    $codeStore.updateDiagram = false;\\r\\n                }\\r\\n                outOfSync = false;\\r\\n                manualUpdate = true;\\r\\n                if (code === state.code && config === state.mermaid) {\\r\\n                    // Do not render if there is no change in Code/Config\\r\\n                    return;\\r\\n                }\\r\\n                code = state.code;\\r\\n                config = state.mermaid;\\r\\n                const scroll = container.parentElement.parentElement.parentElement.scrollTop;\\r\\n                delete container.dataset.processed;\\r\\n                mermaid.initialize(Object.assign({}, JSON.parse(state.mermaid)));\\r\\n                mermaid.render('graph-div', code, (svgCode) => {\\r\\n                    container.innerHTML = svgCode;\\r\\n                });\\r\\n                container.parentElement.parentElement.parentElement.scrollTop = scroll;\\r\\n                error = false;\\r\\n            }\\r\\n            else if (manualUpdate) {\\r\\n                manualUpdate = false;\\r\\n            }\\r\\n            else {\\r\\n                outOfSync = true;\\r\\n            }\\r\\n        }\\r\\n        catch (e) {\\r\\n            error = true;\\r\\n        }\\r\\n    });\\r\\n    errorStore.subscribe((err) => {\\r\\n        if (typeof err === 'undefined') {\\r\\n            error = false;\\r\\n        }\\r\\n        else {\\r\\n            error = true;\\r\\n        }\\r\\n    });\\r\\n});\\r\\n<\/script>\\n\\n<div id=\\"view\\" class=\\"p-2\\" class:error class:outOfSync>\\n\\t<div id=\\"container\\" bind:this={container} class=\\"flex-1 overflow-auto\\" />\\n</div>\\n\\n<style>#view{border:1px darkred;flex:1}.error,.outOfSync{opacity:.5}</style>\\n"],"names":[],"mappings":"AA6DO,mBAAK,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAM,CAAC,wBAAU,CAAC,QAAQ,EAAE,CAAC"}`
};
const View = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $codeStore, $$unsubscribe_codeStore;
  $$unsubscribe_codeStore = subscribe(codeStore, (value) => $codeStore = value);
  const mermaid = window.mermaid;
  let code = "";
  let config = "";
  let container;
  let error2 = false;
  let outOfSync = false;
  let manualUpdate = true;
  onMount(() => {
    codeStore.subscribe((state) => {
      try {
        if (container && state && (state.updateDiagram || state.autoSync))
          ;
        else if (manualUpdate) {
          manualUpdate = false;
        } else {
          outOfSync = true;
        }
      } catch (e) {
        error2 = true;
      }
    });
    errorStore.subscribe((err) => {
      if (typeof err === "undefined") {
        error2 = false;
      } else {
        error2 = true;
      }
    });
  });
  $$result.css.add(css$1);
  $$unsubscribe_codeStore();
  return `<div id="${"view"}" class="${[
    "p-2 svelte-5ndy2s",
    (error2 ? "error" : "") + " " + (outOfSync ? "outOfSync" : "")
  ].join(" ").trim()}"><div id="${"container"}" class="${"flex-1 overflow-auto"}"${add_attribute("this", container, 1)}></div>
</div>`;
});
const autoHistoryMode = persist(writable(true), localStorage(), "autoHistoryMode");
const autoHistoryStore = persist(writable([]), localStorage(), "autoHistoryStore");
const manualHistoryStore = persist(writable([]), localStorage(), "manualHistoryStore");
derived([autoHistoryMode, autoHistoryStore, manualHistoryStore], ([autoMode, autoHistories, manualHistories], set) => {
  set(autoMode ? autoHistories : manualHistories);
});
const loadStateFromURL = () => {
  loadState(window.location.hash.slice(1));
};
const syncDiagram = () => {
  updateCodeStore({
    updateDiagram: true
  });
};
const initHandler = async () => {
  loadStateFromURL();
  syncDiagram();
  initURLSubscription();
  await initAnalytics();
  analytics == null ? void 0 : analytics.page();
};
var edit_svelte_svelte_type_style_lang = '#resizeHandler.svelte-1fkt4zv{cursor:col-resize;padding:0 2px}#resizeHandler.svelte-1fkt4zv:after{background-color:#ccc;content:"";height:100%;margin-left:-1px;position:absolute;top:0;width:2px}#resizeHandler.svelte-1fkt4zv:hover:after{//background-color:#818cf8;background-color:#123;margin-left:-2px;width:4px}@media screen and (max-width:768px){#resizeHandler.svelte-1fkt4zv{display:none}}';
const css = {
  code: '#resizeHandler.svelte-1fkt4zv{cursor:col-resize;padding:0 2px}#resizeHandler.svelte-1fkt4zv:after{background-color:#ccc;content:"";height:100%;margin-left:-1px;position:absolute;top:0;width:2px}#resizeHandler.svelte-1fkt4zv:hover:after{//background-color:#818cf8;background-color:#123;margin-left:-2px;width:4px}@media screen and (max-width:768px){#resizeHandler.svelte-1fkt4zv{display:none}}',
  map: '{"version":3,"file":"edit.svelte","sources":["edit.svelte"],"sourcesContent":["<script lang=\\"ts\\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\r\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\r\\n    return new (P || (P = Promise))(function (resolve, reject) {\\r\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\r\\n        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }\\r\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\r\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\r\\n    });\\r\\n};\\r\\nimport Editor from \\"$lib/components/editor/editor.svelte\\";\\r\\nimport Navbar from \\"$lib/components/navbar.svelte\\";\\r\\nimport Preset from \\"$lib/components/preset.svelte\\";\\r\\nimport Actions from \\"$lib/components/actions.svelte\\";\\r\\nimport View from \\"$lib/components/view.svelte\\";\\r\\nimport Card from \\"$lib/components/card/card.svelte\\";\\r\\nimport History from \\"$lib/components/history/history.svelte\\";\\r\\nimport { updateCode, updateConfig, codeStore, base64State, } from \\"$lib/util/state\\";\\r\\nimport { initHandler, syncDiagram } from \\"$lib/util/util\\";\\r\\nimport { errorStore } from \\"$lib/util/error\\";\\r\\nimport { onMount } from \\"svelte\\";\\r\\n;\\r\\n;\\r\\n;\\r\\nimport { base } from \\"$app/paths\\";\\r\\nconst mermaid = window.mermaid;\\r\\nlet selectedMode = \\"code\\";\\r\\nconst languageMap = {\\r\\n    code: \\"mermaid\\",\\r\\n    config: \\"json\\",\\r\\n};\\r\\nlet text = \\"\\";\\r\\nlet language = \\"mermaid\\";\\r\\nlet errorMarkers = [];\\r\\n$: language = languageMap[selectedMode];\\r\\n$: {\\r\\n    if (selectedMode === \\"code\\") {\\r\\n        text = $codeStore.code;\\r\\n    }\\r\\n    else {\\r\\n        text = $codeStore.mermaid;\\r\\n    }\\r\\n}\\r\\ncodeStore.subscribe((state) => {\\r\\n    if (state.updateEditor) {\\r\\n        text = selectedMode === \\"code\\" ? state.code : state.mermaid;\\r\\n    }\\r\\n});\\r\\nconst tabSelectHandler = (message) => {\\r\\n    $codeStore.updateEditor = true;\\r\\n    selectedMode = message.detail.id;\\r\\n};\\r\\nconst tabs = [\\r\\n    {\\r\\n        id: \\"code\\",\\r\\n        title: \\"Code\\",\\r\\n        icon: \\"fas fa-code\\",\\r\\n    },\\r\\n];\\r\\nconst handleCodeUpdate = (code) => {\\r\\n    mermaid.parse(code);\\r\\n    updateCode(code, false);\\r\\n};\\r\\nconst handleConfigUpdate = (config) => {\\r\\n    JSON.parse(config);\\r\\n    updateConfig(config, false);\\r\\n};\\r\\nconst updateHandler = (message) => {\\r\\n    try {\\r\\n        if (selectedMode === \\"code\\") {\\r\\n            handleCodeUpdate(message.detail.text);\\r\\n        }\\r\\n        else {\\r\\n            handleConfigUpdate(message.detail.text);\\r\\n        }\\r\\n        errorStore.set(undefined);\\r\\n        errorMarkers = [];\\r\\n    }\\r\\n    catch (e) {\\r\\n        errorStore.set(e);\\r\\n        if (e.hash) {\\r\\n            const marker = {\\r\\n                severity: 8,\\r\\n                startLineNumber: e.hash.loc.first_line,\\r\\n                startColumn: e.hash.loc.first_column,\\r\\n                endLineNumber: e.hash.loc.last_line,\\r\\n                endColumn: e.hash.loc.last_column + 1,\\r\\n                message: e.str,\\r\\n            };\\r\\n            errorMarkers.push(marker);\\r\\n            // Clear all previous errors before this error.\\r\\n            errorMarkers = errorMarkers.filter((m) => m.startLineNumber >= marker.startLineNumber &&\\r\\n                m.startColumn >= marker.startColumn);\\r\\n        }\\r\\n        console.error(e);\\r\\n    }\\r\\n};\\r\\nconst viewDiagram = () => {\\r\\n    window.open(`${base}/view#${$base64State}`, \\"_blank\\").focus();\\r\\n};\\r\\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\\r\\n    yield initHandler();\\r\\n    const resizer = document.getElementById(\\"resizeHandler\\");\\r\\n    const element = document.getElementById(\\"editorPane\\");\\r\\n    const resize = (e) => {\\r\\n        const newWidth = e.pageX - element.getBoundingClientRect().left;\\r\\n        if (newWidth > 50) {\\r\\n            element.style.width = `${newWidth}px`;\\r\\n        }\\r\\n    };\\r\\n    const stopResize = () => {\\r\\n        window.removeEventListener(\\"mousemove\\", resize);\\r\\n    };\\r\\n    resizer.addEventListener(\\"mousedown\\", (e) => {\\r\\n        e.preventDefault();\\r\\n        window.addEventListener(\\"mousemove\\", resize);\\r\\n        window.addEventListener(\\"mouseup\\", stopResize);\\r\\n    });\\r\\n}));\\r\\n<\/script>\\n\\n<div class=\\"h-full flex flex-col overflow-hidden bg-gray-100\\">\\n  <div class=\\"flex-1 flex overflow-hidden\\">\\n    <div class=\\"hidden md:flex flex-col\\" id=\\"editorPane\\" style=\\"width: 40%\\">\\n      <Card\\n        on:select={tabSelectHandler}\\n        {tabs}\\n        isCloseable={false}\\n        title=\\"DeveloperCodeBase\\"\\n      >\\n        <div slot=\\"actions\\">\\n          {#if !$codeStore.autoSync}\\n            <button\\n              class=\\"bg-indigo-800 hover:bg-indigo-900 rounded px-4 mx-2\\"\\n              title=\\"Sync Diagram\\"\\n              data-cy=\\"sync\\"\\n              on:click={syncDiagram}><i class=\\"fas fa-sync\\" /></button\\n            >\\n          {/if}\\n          <label\\n            for=\\"autoSync\\"\\n            style=\\"white-space: nowrap;overflow: hidden;text-overflow: ellipsis;\\"\\n          >\\n            <input\\n              type=\\"checkbox\\"\\n              id=\\"autoSync\\"\\n              bind:checked={$codeStore.autoSync}\\n            />\\n            Auto sync\\n          </label>\\n        </div>\\n\\n        <Editor on:update={updateHandler} {language} bind:text {errorMarkers} />\\n      </Card>\\n\\n      <div class=\\"-mt-2\\">\\n        <Preset />\\n\\n        <Actions />\\n      </div>\\n    </div>\\n    <div id=\\"resizeHandler\\" />\\n    <div class=\\"flex-1 flex flex-col overflow-hidden\\">\\n      <Card title=\\"Diagram\\" isCloseable={false}>\\n        <button\\n          slot=\\"actions\\"\\n          class=\\"btn \\"\\n          title=\\"View diagram in new page\\"\\n          on:click|stopPropagation={() => viewDiagram()}\\n          ><i class=\\"far fa-eye\\" /> View</button\\n        >\\n\\n        <div class=\\"flex-1 overflow-auto\\">\\n          <View />\\n        </div>\\n      </Card>\\n      <div class=\\"md:hidden bg-white rounded shadow p-2 mx-2\\">\\n        This web app doesn\'t run in mobile\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<style>#resizeHandler{cursor:col-resize;padding:0 2px}#resizeHandler:after{background-color:#ccc;content:\\"\\";height:100%;margin-left:-1px;position:absolute;top:0;width:2px}#resizeHandler:hover:after{//background-color:#818cf8;background-color:#123;margin-left:-2px;width:4px}@media screen and (max-width:768px){#resizeHandler{display:none}}</style>\\n"],"names":[],"mappings":"AAsLO,6BAAc,CAAC,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,6BAAc,MAAM,CAAC,iBAAiB,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,6BAAc,MAAM,MAAM,CAAC,mBAAmB,OAAO,CAAC,iBAAiB,IAAI,CAAC,YAAY,IAAI,CAAC,MAAM,GAAG,CAAC,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,KAAK,CAAC,CAAC,6BAAc,CAAC,QAAQ,IAAI,CAAC,CAAC"}'
};
const Edit = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $codeStore, $$unsubscribe_codeStore;
  let $$unsubscribe_base64State;
  $$unsubscribe_codeStore = subscribe(codeStore, (value) => $codeStore = value);
  $$unsubscribe_base64State = subscribe(base64State, (value) => value);
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  let selectedMode = "code";
  const languageMap = { code: "mermaid", config: "json" };
  let text = "";
  let language = "mermaid";
  let errorMarkers = [];
  codeStore.subscribe((state) => {
    if (state.updateEditor) {
      text = state.code;
    }
  });
  const tabs = [
    {
      id: "code",
      title: "Code",
      icon: "fas fa-code"
    }
  ];
  onMount(() => __awaiter(void 0, void 0, void 0, function* () {
    yield initHandler();
    const resizer = document.getElementById("resizeHandler");
    const element = document.getElementById("editorPane");
    const resize = (e) => {
      const newWidth = e.pageX - element.getBoundingClientRect().left;
      if (newWidth > 50) {
        element.style.width = `${newWidth}px`;
      }
    };
    const stopResize = () => {
      window.removeEventListener("mousemove", resize);
    };
    resizer.addEventListener("mousedown", (e) => {
      e.preventDefault();
      window.addEventListener("mousemove", resize);
      window.addEventListener("mouseup", stopResize);
    });
  }));
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    language = languageMap[selectedMode];
    {
      {
        {
          text = $codeStore.code;
        }
      }
    }
    $$rendered = `<div class="${"h-full flex flex-col overflow-hidden bg-gray-100"}"><div class="${"flex-1 flex overflow-hidden"}"><div class="${"hidden md:flex flex-col"}" id="${"editorPane"}" style="${"width: 40%"}">${validate_component(Card, "Card").$$render($$result, {
      tabs,
      isCloseable: false,
      title: "DeveloperCodeBase"
    }, {}, {
      actions: () => `<div slot="${"actions"}">${!$codeStore.autoSync ? `<button class="${"bg-indigo-800 hover:bg-indigo-900 rounded px-4 mx-2"}" title="${"Sync Diagram"}" data-cy="${"sync"}"><i class="${"fas fa-sync"}"></i></button>` : ``}
          <label for="${"autoSync"}" style="${"white-space: nowrap;overflow: hidden;text-overflow: ellipsis;"}"><input type="${"checkbox"}" id="${"autoSync"}"${add_attribute("checked", $codeStore.autoSync, 1)}>
            Auto sync
          </label></div>`,
      default: () => `${validate_component(Editor, "Editor").$$render($$result, { language, errorMarkers, text }, {
        text: ($$value) => {
          text = $$value;
          $$settled = false;
        }
      }, {})}`
    })}

      <div class="${"-mt-2"}">${validate_component(Preset, "Preset").$$render($$result, {}, {}, {})}

        ${validate_component(Actions, "Actions").$$render($$result, {}, {}, {})}</div></div>
    <div id="${"resizeHandler"}" class="${"svelte-1fkt4zv"}"></div>
    <div class="${"flex-1 flex flex-col overflow-hidden"}">${validate_component(Card, "Card").$$render($$result, { title: "Diagram", isCloseable: false }, {}, {
      actions: () => `<button slot="${"actions"}" class="${"btn "}" title="${"View diagram in new page"}"><i class="${"far fa-eye"}"></i> View</button>`,
      default: () => `<div class="${"flex-1 overflow-auto"}">${validate_component(View, "View").$$render($$result, {}, {}, {})}</div>`
    })}
      <div class="${"md:hidden bg-white rounded shadow p-2 mx-2"}">This web app doesn&#39;t run in mobile
      </div></div></div>
</div>`;
  } while (!$$settled);
  $$unsubscribe_codeStore();
  $$unsubscribe_base64State();
  return $$rendered;
});
var edit = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Edit
});
const View_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  onMount(initHandler);
  return `${validate_component(View, "View").$$render($$result, {}, {}, {})}`;
});
var view = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": View_1
});
export { init, render };
